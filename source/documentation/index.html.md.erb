# M365 Configuration as Code - Technical Guidance 


## Who is this for?

This page is intended for people who are responsible for the configuration, security and operation of the Ministry of Justices Microsoft 365 services. 

It holds information on the Ministry of Justices M365DSC DevOps integrated architecture, guidance and engineering references, intended scope & configuration overview, to help onboard and support the administrators of our tenants.

## What is M365DSC?

Microsoft365DSC is an Open-Source initiative lead by Microsoft engineers and maintained by the community. It allows you to write a definition for how your Microsoft 365 tenant should be configured, automate the deployment of that configuration and ensures the monitoring of the defined configuration, notifying and acting on detected configuration drifts. 

It is the primary tool used by the MoJ to automate the management of the organisations tenants in line with the NCSC & Microsoft [blueprint for UK Government](https://www.gov.uk/guidance/microsoft-365-guidance-for-uk-government).

Microsoft365DSC is built as a module for the [PowerShell Desired State Configuration](https://learn.microsoft.com/en-us/powershell/scripting/dsc/overview) framework and is made available via the [PowerShell Gallery](https://www.powershellgallery.com/packages/Microsoft365DSC).

## Overview 

### Architecture 

![workflow diagram](../images/workflow-diagram.png "workflow diagram")

### Workflow
1. Admin creates a new branch from the `main`Staff-Infrastructure-Microsoft365-DSC-Configuration repository, with a name relevant to the change they are making e.g. 'DEV-TeamsMeetingPolicy-update'
2. Admin makes the required configuration changes to the data files nessecary to the change they are making
3. Admin commits and syncs the changes to the forked repository
4. Admin creates a pull request (PR) to merge the changes to the 'main' repository, proving a description of what changes have been made to allow others to more efficiently peer review the work
5. The build pipeline runs on the PR
6. Depending on the files that have been changed the relevant lead engineers or architects will be asked to review and approve the change, this is defined based on the content of the 'codeowners' file
7. The merged PR triggers a pipeline to compile Managed Object Format (MOF) files. The pipeline calls Azure Key Vault to retrieve the credentials that are used by the tenant specific service principle(s) in the MOF files, and publishes the artifacts ready for deployment
8. The release pipeline is triggered that uses the compiled MOF files to deploy configuration changes to the tenants that are managed via Microsoft365DSC
9. Admin who commited the changes reviews the relevant pipeline & config in the M365 admin center to confirm the expected changes have been successfully applied

### Components
* Azure DevOps - Azure DevOps is a comprehensive suite of development tools and services that are used by MoJ to facilitate the development testing, and delivery of M365 configuration through a collaborative and integrated environment, with robust Continuous Integration and Continuous Deployment (CI/CD) capabilities.
* Azure Pipelines - Azure Pipelines are an Azure DevOps service for continuous integration and continuous delivery (CI/CD). Use Azure Pipelines to test and build your code and ship it to any target. You can also use Azure Pipelines to implement quality gates to help ensure that you deploy changes in a controlled and consistent manner.
* Managed DevOps Pool - Managed DevOps Pools in Azure DevOps provide a fully managed service where virtual machines or containers powering the agents reside in a Microsoft Azure subscription, offering seamless scalability and management for CI/CD pipelines.
* NAT Gateway - Azure NAT Gateway is a fully managed and highly resilient Network Address Translation (NAT) service that enables instances in a private subnet to connect outbound to the internet while remaining fully private, ensuring secure and scalable outbound connectivity.
* Key Vault - Key Vault improves the security of storage for tokens, passwords, certificates, API keys, and other secrets. It also provides tightly controlled access to these secrets. Use Key Vault to store service principals and certificates that you use to deploy configuration changes to Microsoft 365 tenants.
* Storage Account - Azure Storage Accounts provide scalable and secure storage solutions for various data types, including blobs, files, queues, and tables, and are used in an M365 DevOps framework to store and manage modules, ensuring efficient and reliable deployment and configuration of Microsoft 365 environments.
* Microsoft365DSC - provides automation for the deployment, configuration, and monitoring of Microsoft 365 tenants via PowerShell Desired Stage Configuration (DSC). Use Microsoft365DSC to deploy configuration changes to Microsoft 365 tenants via Azure Pipelines.
* Windows PowerShell DSC - is a management platform in PowerShell. You can use it to manage your development infrastructure by using a configuration-as-code model. This model is the underlying technology that Microsoft365DSC uses.
* GitHub - GitHub is a leading platform for version control and collaboration, enabling developers to manage and share their code, track changes, and collaborate on projects seamlessly.

### Azure Well-Architected Framework Alignment

words

#### Secuirty 
#### Cost Optimization
#### Operational Excellence 
#### Performance Efficiency















## Guidance 

<Add content>

### Getting Started 

<Add content>


### Shared Responsobility

<Add content>

### Getting Help

<Add content>


## Configuration

<Add content>

### Data Files 

<Add content>

### Environment

<Add content>

### Basic

<Add content>

### Mandatory

<Add content>

## How we handle the breaking changes release schedule 

<Add content>


## Reference

<Add content>


